import pandas as pd
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt

# Создаем DataFrame с предоставленными данными
data = {
    'Region': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    'Days': [11, 18, 20, 14, 15, 17, 15, 12, 11, 17, 12, 19, 19, 14, 15, 11, 14, 12, 10, 17, 15, 17, 18, 14, 21, 11, 14, 15, 10, 17, 13, 11, 13, 10, 12, 11, 11, 17, 16, 11, 12, 13, 11, 13, 10, 19, 12, 13, 16, 17, 14, 12, 9, 11, 11, 16, 13, 12, 25, 13, 13, 18, 19, 12, 17, 18, 20, 11, 21, 20, 18, 11, 14, 16, 14, 18, 20, 11, 15, 10],
    'Visits': [4, 2, 2, 4, 4, 2, 4, 6, 4, 2, 2, 2, 2, 4, 2, 6, 4, 6, 4, 2, 4, 2, 2, 4, 2, 2, 4, 2, 4, 2, 4, 2, 2, 4, 2, 4, 2, 2, 4, 2, 6, 4, 6, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 2, 4, 2, 2, 2, 4, 2, 2, 4, 2, 2, 4, 2, 2, 4],
    'ExtrCharges': [202, 160, 137, 270, 212, 190, 212, 312, 216, 221, 195, 153, 160, 270, 192, 344, 271, 312, 301, 174, 212, 174, 160, 270, 120, 344, 270, 161, 129, 182, 219, 148, 136, 119, 158, 161, 176, 136, 219, 129, 148, 174, 185, 136, 129, 148, 136, 148, 160, 179, 179, 220, 191, 180, 248, 160, 198, 198, 112, 185, 220, 136, 219, 161, 119, 158, 161, 219, 129, 185, 136, 159, 182, 136, 171, 120, 220, 161, 192, 312],
    'Tips': [204, 139, 117, 208, 173, 153, 173, 198, 187, 193, 231, 133, 133, 208, 133, 263, 183, 198, 198, 136, 173, 136, 133, 208, 106, 213, 208, 146, 113, 150, 233, 140, 158, 189, 147, 145, 153, 161, 140, 201, 243, 183, 143, 150, 183, 220, 183, 268, 193, 133, 143, 126, 157, 211, 231, 201, 251, 151, 143, 158, 203, 183, 346, 288, 183, 346, 341, 136, 184, 168, 168, 153, 157, 109, 183, 143, 133, 158, 145, 149],
    'USD': [23624, 11144, 10614, 24190, 16490, 13354, 16094, 31945, 27797, 15471, 21887, 10364, 11895, 20720, 13973, 16830, 29663, 36425, 16949, 11326, 16934, 14226, 12670, 28895, 9811, 19030, 18925, 13090, 20540, 15551, 14072, 59378, 33740, 27894, 29413, 13926, 14490, 20235, 27335, 17345, 12610, 9835, 22750, 20015, 53595, 28290, 30225, 56195, 21880, 41395, 34695, 7861, 16154, 25244, 16743, 11863, 23693, 16026, 14353, 14673, 25305, 11203, 6544, 11194, 19015, 16865, 14014, 17064, 14865, 24115, 10624, 17939, 11614, 14794, 17124, 19264, 21094, 14464, 11524, 14276],
}

df = pd.DataFrame(data)

# Выбираем только интересующие нас параметры для кластеризации
features_income_tips = df[['USD', 'Tips']]
features_all = df.drop(['Region'], axis=1)

# Выполняем кластеризацию для среднего дохода и размера чаевых
kmeans_income_tips = KMeans(n_clusters=3, random_state=42)
df['Cluster_Income_Tips'] = kmeans_income_tips.fit_predict(features_income_tips)

# Выполняем кластеризацию для всех параметров
kmeans_all = KMeans(n_clusters=3, random_state=42)
df['Cluster_All'] = kmeans_all.fit_predict(features_all)

# Визуализация результатов по среднему доходу и размеру чаевых
plt.scatter(df['USD'], df['Tips'], c=df['Cluster_Income_Tips'], cmap='rainbow', label='Данные')
plt.scatter(kmeans_income_tips.cluster_centers_[:, 0], kmeans_income_tips.cluster_centers_[:, 1], c='black', marker='X', s=200, label='Центроиды')
plt.title('Кластеры по среднему доходу и размеру чаевых')
plt.xlabel('Средний месячный доход туриста (USD)')
plt.ylabel('Объем чаевых за одно проживание (Tips)')
plt.legend()
plt.show()

# Визуализация результатов по всем параметрам
df['Region'] = df['Region'].astype('category')  # Кластеризация с учетом региона
plt.scatter(df['Visits'], df['USD'], c=df['Cluster_All'], cmap='rainbow', label='Данные')
plt.scatter(kmeans_all.cluster_centers_[:, 1], kmeans_all.cluster_centers_[:, 4], c='black', marker='X', s=200, label='Центроиды')
plt.title('Кластеры по всем параметрам')
plt.xlabel('Количество посещаемых в год стран (Visits)')
plt.ylabel('Средний месячный доход туриста (USD)')
plt.legend()
plt.show()
